{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Playground\\\\MIcroservices\\\\client\\\\client\\\\src\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CommentCreate from \"./CommentCreate\";\nimport CommentList from \"./CommentList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState({});\n  const fetchPosts = async () => {\n    const res = await axios.get(\"http://localhost:4000/posts\");\n    setPosts(res.data.posts);\n    console.log(\"HI \" + JSON.stringify(res.data.posts));\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const renderedPosts = Object.values(posts).forEach(post => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: \"30%\",\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: posts[post].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n          postId: posts[post].id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentCreate, {\n          postId: posts[post].id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, post, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-row flex-wrap justify-content-between\",\n    children: renderedPosts\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"x9bp4+EUybyoJxklz6lKZgAYJjU=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","axios","CommentCreate","CommentList","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","fetchPosts","res","get","data","console","log","JSON","stringify","renderedPosts","Object","values","forEach","post","className","style","width","marginBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","postId","id","_c","$RefreshReg$"],"sources":["D:/Coding Playground/MIcroservices/client/client/src/PostList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport CommentCreate from \"./CommentCreate\";\nimport CommentList from \"./CommentList\";\n\nconst PostList = () => {\n  const [posts, setPosts] = useState({});\n\n  const fetchPosts = async () => {\n    const res = await axios.get(\"http://localhost:4000/posts\");\n\n    setPosts(res.data.posts);\n    console.log(\"HI \" + JSON.stringify(res.data.posts));\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const renderedPosts = Object.values(posts).forEach((post) => {\n    return (\n      <div\n        className=\"card\"\n        style={{ width: \"30%\", marginBottom: \"20px\" }}\n        key={post}\n      >\n        <div className=\"card-body\">\n          <h3>{posts[post].title}</h3>\n          <CommentList postId={posts[post].id} />\n          <CommentCreate postId={posts[post].id} />\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"d-flex flex-row flex-wrap justify-content-between\">\n      {renderedPosts}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,6BAA6B,CAAC;IAE1DH,QAAQ,CAACE,GAAG,CAACE,IAAI,CAACL,KAAK,CAAC;IACxBM,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGC,IAAI,CAACC,SAAS,CAACN,GAAG,CAACE,IAAI,CAACL,KAAK,CAAC,CAAC;EACrD,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdU,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACZ,KAAK,CAAC,CAACa,OAAO,CAAEC,IAAI,IAAK;IAC3D,oBACEjB,OAAA;MACEkB,SAAS,EAAC,MAAM;MAChBC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAC,QAAA,eAG9CtB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAI,QAAA,gBACxBtB,OAAA;UAAAsB,QAAA,EAAKnB,KAAK,CAACc,IAAI,CAAC,CAACM;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5B3B,OAAA,CAACF,WAAW;UAAC8B,MAAM,EAAEzB,KAAK,CAACc,IAAI,CAAC,CAACY;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvC3B,OAAA,CAACH,aAAa;UAAC+B,MAAM,EAAEzB,KAAK,CAACc,IAAI,CAAC,CAACY;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC,GANDV,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAON,CAAC;EAEV,CAAC,CAAC;EAEF,oBACE3B,OAAA;IAAKkB,SAAS,EAAC,mDAAmD;IAAAI,QAAA,EAC/DT;EAAa;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnCID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}